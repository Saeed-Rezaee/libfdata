TODO
* add callback to calculate cache index ?
  - allow to be NULL by default and fallback to default behavior
  - separate set function
* list
  - reimplement libfdata_list_get_element_index_at_value_index ?
  - preserve external set mapped offset ?
  - optimize recalculation of element index ?
  - add optimized append element with mapped range function ?
  - add stream like read/write buffer ?

* rewrite
  - update libfdata_tree_initialize
* mapped range
  - optimize calculations by adding flag to mapped range ?
    LIBFDATA_MAPPED_RANGE_FLAG_IS_INVALID
  - do they currently allow for gaps ?
* stream
  - complete libfdata_stream_clone
  - add mapped offset support ?
* add tests
* update include header and man page
  - list
  - list element (update)
  - stream (done)
  - tree
  - tree node
  - vector
  - other
* update msvscpp files

20130405
* worked on refactor to combine fdata and mfdata

20130404
* updated dependencies
* fixes for local library Makefiles
* worked on refactor to combine fdata and mfdata
* updated include header and man page

20130403
* worked on refactor to combine fdata and mfdata
* worked on list
* worked on stream

20130402
* worked on refactor to combine fdata and mfdata
* worked on list
* worked on stream

20130401
* worked on refactor to combine fdata and mfdata
* stream rewrite
  - removed list
  - removed caching
  - removed segment data functions
  - added write support

20130320
* worked on refactor to combine fdata and mfdata
* worked on stream
* removed stream reference

20130319
* worked on refactor to combine fdata and mfdata

20130303
* worked on refactor to combine fdata and mfdata

20130224
* 2013 update
* code clean up

20121216
* worked on refactor to combine fdata and mfdata

20121215
* worked on refactor to combine fdata and mfdata

20121212
* worked on refactor to combine fdata and mfdata

20121211
* created stand-alone version based on libfguid

